---
name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  issues: read
  pull-requests: read

jobs:
  ci:
    uses: ./.github/workflows/ci.yaml
    secrets: inherit

  update-changelog:
    uses: ./.github/workflows/changelog.yaml
    needs:
      - ci
    secrets: inherit

  generate-changelog:
    name: Generate a changelog
    runs-on: ubuntu-latest
    needs:
      - ci
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-publish:
    name: Build and Publish release
    needs:
      - update-changelog
      - generate-changelog
    runs-on: ${{ matrix.build.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: linux-x64-glibc
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.build.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build binary
        run: cargo build --release --locked --target ${{ matrix.build.target }}
      - name: Set the release version
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
      - name: Prepare release assets
        run: |
          mkdir -p release/
          cp {LICENSE,README.md,CHANGELOG.md} release/
          cp "target/${{ matrix.build.target }}/release/leetcode-cli" release/
          mv release/ leetcode-cli-${{ env.RELEASE_VERSION }}/
      - name: Create
        shell: bash
        run: |
          tar -czvf leetcode-cli-${{ env.RELEASE_VERSION }}-${{ matrix.build.target }}.tar.gz \
            leetcode-cli-${{ env.RELEASE_VERSION }}/
          shasum -a 512 leetcode-cli-${{ env.RELEASE_VERSION }}-${{ matrix.build.target }}.tar.gz \
            > leetcode-cli-${{ env.RELEASE_VERSION }}-${{ matrix.build.target }}.tar.gz.sha512
      - name: Upload the binary releases
        id: upload-release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            leetcode-cli-${{ env.RELEASE_VERSION }}-${{ matrix.build.target }}*
          body: ${{ needs.generate-changelog.outputs.release_body }}
          draft: false
          prerelease: false
